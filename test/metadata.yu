extern
	func print(...*)
end

class DataBase
end

class DataEntry extends DataBas
	
	field name$
	field id#

	field x,y,z#

	final method tostring$()
		return 'id:'..id
	end
end



-- @export
-- @database('main')
-- class DataEntry extends DataBase
	
-- 	@unique  field name$ 
-- 	@mainkey field id#

-- 	@vector  field x,y,z#

-- 	@hidden
-- 	final method tostring$()
-- 		return 'id:'..id
-- 	end
-- end


class EditableObject
	field label$
	field reference, subobject, hidden?
end

class Property
	field reference=false
	field label$
	field min,max#
	field widget='default'
end


@Serializable
class Tank extends GObject
	
	@Property{reference = true , label = 'Pilot'}
	field pilot:Person

	@Property{reference = true , label = 'Ammo Type'}
	field ammoType:AmmoType

	@Property{reference = true , label = 'Ammo Count'}
	@Test
	field ammoCount#

	@Property{ min = 0, max = 1 }
	field reloadTime#

end

local t = Tank()
local typeinfo = reflect(t) --> return Tank's classinfo

local e1 = DataEntry{
	id = 1,
	name='John'
}

print( e1.tostring() )
local func test()
	global x = 1
end
local m = 1
test()

